<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:viewmodels="clr-namespace:GCS_LAB411.ViewModels"
             x:Class="GCS_LAB411.Views.SubViews.NavBar">
    <ContentView.Resources>
        <ResourceDictionary>
            <Style x:Key="image-style" TargetType="ImageButton">
                <Setter Property="WidthRequest" Value="35"/>
                <Setter Property="HeightRequest" Value="35"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>
    <ContentView.Content>
        <Grid ColumnSpacing="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <BoxView Color="#1C1C1D" Opacity="0.7" Grid.Column="0" Grid.RowSpan="1"/>
            <BoxView Color="#1C1C1D" Opacity="0.7" Grid.Column="1" Grid.RowSpan="1"/>

            <StackLayout Grid.Column="0" Orientation="Horizontal" Margin="0,0,30,0">

                <ImageButton Source="logo411.png"
                             BackgroundColor="#F6F6F6"
                             Style="{StaticResource image-style}"
                             Margin="5,0,25,0"
                             Command="{Binding NavBarViewModel.ChangedViewCommand}"
                             CommandParameter="0"/>

                <ImageButton Source="flyto.png"
                             BackgroundColor="Transparent"
                             Style="{StaticResource image-style}"
                             Margin="0,0,25,0"
                             Command="{Binding NavBarViewModel.ChangedViewCommand}"
                             CommandParameter="1"/>

                <ImageButton Source="waypoint.png"
                             BackgroundColor="Transparent"
                             Style="{StaticResource image-style}"
                             Margin="0,0,25,0"/>

            </StackLayout>

            <StackLayout Grid.Column="1" Orientation="Horizontal">
                <StackLayout Orientation="Horizontal">
                    <StackLayout Orientation="Horizontal" Margin="0, 0, 25, 0">
                        <Ellipse WidthRequest="25" HeightRequest="25" VerticalOptions="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger TargetType="Ellipse" Binding="{Binding VehicleManagerViewModel.Vehicle.TelemetryMSG.Connected}" Value="true">
                                            <Setter Property="Fill" Value="GreenYellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <Label Text="LINK" TextColor="White" FontSize="Medium" VerticalOptions="Center"/>
                    </StackLayout>

                    <Image Source="batterystatus.png" BackgroundColor="Transparent" WidthRequest="30" HeightRequest="30"/>
                    <StackLayout Orientation="Horizontal" Spacing="0" Margin="-5,0,10,0">
                        <Label Text="{Binding VehicleManagerViewModel.Vehicle.TelemetryMSG.Battery}" TextColor="White" FontSize="Medium" VerticalOptions="Center"/>
                        <Label Text="%" TextColor="White" FontSize="Medium" VerticalOptions="Center"/>
                    </StackLayout>
                    <Label Text="{Binding VehicleManagerViewModel.Vehicle.TelemetryMSG.CurrentMode}" 
                           Margin="0,0,10,0"
                           TextColor="White" FontSize="Medium" VerticalOptions="Center"/>
                    <Label TextColor="White" FontSize="Medium" VerticalOptions="Center">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Text" Value="DISARMED"/>
                                <Style.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding VehicleManagerViewModel.Vehicle.TelemetryMSG.Arm}" Value="true">
                                        <Setter Property="Text" Value="ARMED"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding MapViewModel.AutoPilotCommand}"
                                                  CommandParameter="DoArmDisarm">
                            </TapGestureRecognizer>
                        </Label.GestureRecognizers>
                    </Label>
                </StackLayout>
            </StackLayout>
        </Grid>
    </ContentView.Content>
</ContentView>